{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"mMA+BeA,EA3BK,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,cAAoB,EACFC,mBAAS,IADP,mBAC/BC,EAD+B,KACnBC,EADmB,KActC,OACI,sBAAMC,SATU,SAACC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAhBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCWLO,EATK,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAC7B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCoBDO,EAvBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAJ,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAH0B,mBAC/BC,EAD+B,KACxBC,EADwB,KAkBtC,OAZAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAIrB,CAACpB,IAEGqB,EDhBwBK,CAAa1B,GAAhCa,EAFgB,EAErBN,KAAaa,EAFQ,EAERA,QAGpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,uDAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEY3BgB,EAxBM,WAAO,IAAD,EAEazC,mBAAS,CAAC,uBAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEQ2C,EAAWnB,KAAI,SAACoB,GAAD,OACX,cAAC,EAAD,CAEI7B,SAAU6B,GADLA,Y,MCdjCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fef66e0e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AddCategory = ({setcategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange =(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setcategories(cats => [ inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit ={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setcategories : PropTypes.func.isRequired\r\n}\r\nexport default AddCategory\r\n","export const getGifs = async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category) }&limit=10&api_key=xbcFPFzqBmawj0eB4EBMmlBds5PZMETW`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n    \r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3> \r\n            {loading && <p className=\"animate__animated animate__fadeIn animate__bounceOut\">Loading...</p>}  \r\n            <div className=\"card-grid\">\r\n                    {                    \r\n                        images.map((img)=>(\r\n                            <GifGridItem \r\n                                key ={img.id}\r\n                                {...img}\r\n                            />\r\n                        )) \r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n            .then(imgs =>{\r\n                setstate({\r\n                    data: imgs,\r\n                    loading:false\r\n                });\r\n            });\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n\r\n","import { useState } from \"react\"\r\nimport AddCategory from \"./components/AddCategory\"\r\nimport GifGrid from \"./components/GifGrid\"\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    const [categories, setcategories] = useState(['Shingeki No Kyojin'])\r\n   \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>  \r\n            <AddCategory setcategories={setcategories}/>\r\n            <hr/>\r\n\r\n\r\n            <ol>   \r\n                {\r\n                    categories.map((cat) => \r\n                        <GifGrid \r\n                            key={cat}\r\n                            category={cat}\r\n                        />\r\n                    )\r\n                }\r\n            </ol> \r\n        </>\r\n    )\r\n}\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}